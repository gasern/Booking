@model TeliaCore.Models.BookingExt
@using TeliaCore.HtmlHelpers
@using TeliaCore.Models

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>


<script type="text/javascript">
   
    $(function () {

       

        $(".wizard-step:first").fadeIn(); // show first step


        // attach backStep button handler
        // hide on first step
        $("#back-step").hide().click(function () {
            var $step = $(".wizard-step:visible"); // get current step
            if ($step.prev().hasClass("wizard-step")) { // is there any previous step?
                $step.hide().prev().fadeIn();  // show it and hide current step

                // disable backstep button?
                if (!$step.prev().prev().hasClass("wizard-step")) {
                    $("#back-step").hide();
                }
            }
        });


        // attach nextStep button handler       
        $("#next-step").click(function () {

            var $step = $(".wizard-step:visible"); // get current step

            var validator = $("form").validate(); // obtain validator
            var anyError = false;
            $step.find("input").each(function () {
                if (!validator.element(this)) { // validate every input element inside this step
                    anyError = true;
                }

            });

            if (anyError)
                return false; // exit if any error found




            if ($step.next().hasClass("confirm")) { // is it confirmation?
                // show confirmation asynchronously
                $.post("/booking/confirm", $("form").serialize(), function (r) {
                    // inject response in confirmation step
                    $(".wizard-step.confirm").html(r);
                });

            }

            if ($step.next().hasClass("wizard-step")) { // is there any next step?
                $step.hide().next().fadeIn();  // show it and hide current step
                $("#back-step").show();   // recall to show backStep button
            }

            else { // this is last step, submit form
                $("form").submit();
            }


        });

    });

</script>

<style type="text/css">
.wizard-step
{
	display: none;
}

.display-field
{
	font-weight: bold;
}
</style>

@using (Html.BeginForm("AddBooking","Booking")) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Booking</legend>

         <div class="rdContent" id="ctl00_CenterStage_orderManager_RadDock29_1004_C">
				    <div style="margin-bottom: 1.5em">
                        <div style="position: relative; overflow: hidden; white-space: nowrap; height: 32px;" id="div_FlowTopNavigation">
        
                            <div style="position: absolute; z-index: 5; top: 0px; left: 0px" class="navigationnode current first" id="nav_date">
                                <span class="navigationtext current first" id="ctl00_CenterStage_orderManager_RadDock29_1004_C_ControlModule29_1004_FlowRepeater_ctl00_lbl_Text">1. Find dato</span>
                    
                            </div>
            
                            <div style="position: absolute; z-index: 4; top: 0px; left: 200px" class="navigationnode unvisited" id="nav_contacts">
                                <span class="navigationtext unvisited" id="ctl00_CenterStage_orderManager_RadDock29_1004_C_ControlModule29_1004_FlowRepeater_ctl01_lbl_Text">2. Kontakter</span>
                    
                            </div>
            
                            <div style="position: absolute; z-index: 3; top: 0px; left: 400px" class="navigationnode unvisited" id="nav_room">
                                <span class="navigationtext unvisited" id="ctl00_CenterStage_orderManager_RadDock29_1004_C_ControlModule29_1004_FlowRepeater_ctl02_lbl_Text">3. Lokale</span>
                    
                            </div>
            
                            <div style="position: absolute; z-index: 2; top: 0px; left: 600px" class="navigationnode unvisited" id="nav_mealorder">
                                <span class="navigationtext unvisited" id="ctl00_CenterStage_orderManager_RadDock29_1004_C_ControlModule29_1004_FlowRepeater_ctl03_lbl_Text">4. Forplejning</span>
                    
                            </div>
                            <div style="position: absolute; z-index: 1; top: 0px; left: 800px" class="navigationnode unvisited last" id="nav_confirm">
                                <span class="navigationtext unvisted" id="ctl00_CenterStage_orderManager_RadDock29_1004_C_ControlModule29_1004_FlowRepeater_ctl04_lbl_Text">5. Bekræft</span>
                    
                            </div>
                        </div>
                    </div>
                </div>

         <div class="wizard-step" id="time">
            <h3>Step 1: Vælg tid og dato</h3>
        
            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.StartDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.EndDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EndDate)
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.StartTime)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.StartTime)
                @Html.ValidationMessageFor(model => model.StartTime)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.EndTime)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EndTime)
                @Html.ValidationMessageFor(model => model.EndTime)
            </div>
        </div>

         <div class="wizard-step" id="contacts">
            <h3>Step 2: Vælg kontakter</h3>
         @*<table>*@
               <input type="search" class="contactSearch" id="search" onkeyup="SearchContacts();return false;"/>
               <table>
	                <tbody>
                        <tr>
		                    <td>
			                    <select multiple="multiple" size="10" name="sel1">
			                   @foreach(var contact in ((IList<Contact>)ViewData["AllContacts"]))
                                {
                                    <option class="allcontacts" id="@(contact.Id)tsas" name="ContactIds" value="@contact.Id">@contact.FirstName @contact.LastName - @contact.Department</option>
                                }
			                    </select>
		                    </td>
		                    <td align="center" valign="middle">
			                    <input class="move_forward" type="button" onclick="moveOptions(this.form.sel1, this.form.sel2);" value="&gt;"/><br/>
			                    <input class="move_backward" type="button" onclick="moveOptions(this.form.sel2, this.form.sel1);" value="&lt;"/>
		                    </td>
		                    <td>
			                    <select class="invited" multiple="multiple" size="10" name="sel2">
			               
			                    </select>
		                    </td>
	                    </tr>
                    </tbody>
                </table>

                <script type="text/javascript">

                    $('#search').keyup(function (event) {
                        var search_text = $('#search').val();
                        var rg = new RegExp(search_text, "i");
                        $('.allcontacts').each(function() {
                            if ($.trim($(this).html()).search(rg) == -1) {
                                $(this).parent().css('display', 'none');
                                $(this).css('display', 'none');
                                $(this).next().css('display', 'none');
                                $(this).next().next().css('display', 'none');
                            }
                            else {
                                $(this).parent().css('display', '');
                                $(this).css('display', '');
                                $(this).next().css('display', '');
                                $(this).next().next().css('display', '');
                            }
                        });
                    });

//                    $('#search_clear').click(function () {
//                        $('#search').val('');

//                        $('..allcontacts').each(function () {
//                            $(this).parent().css('display', '');
//                            $(this).css('display', '');
//                            $(this).next().css('display', '');
//                            $(this).next().next().css('display', '');
//                        });
//                    });

     
                        function addOption(theSel, theText, theValue) {
                            var newOpt = new Option(theText, theValue);
                            var selLength = theSel.length;
                            theSel.options[selLength] = newOpt;
                        }

                        function deleteOption(theSel, theIndex) {
                            var selLength = theSel.length;
                            if (selLength > 0) {
                                theSel.options[theIndex] = null;
                            }
                        }

                        function moveOptions(theSelFrom, theSelTo) {

                            var selLength = theSelFrom.length;
                            var selectedText = new Array();
                            var selectedValues = new Array();
                            var selectedCount = 0;

                            var i;

                            // Find the selected Options in reverse order
                            // and delete them from the 'from' Select.
                            for (i = selLength - 1; i >= 0; i--) {
                                if (theSelFrom.options[i].selected) {
                                    selectedText[selectedCount] = theSelFrom.options[i].text;
                                    selectedValues[selectedCount] = theSelFrom.options[i].value;
                                    deleteOption(theSelFrom, i);
                                    selectedCount++;
                                }
                            }

                            // Add the selected text/values in reverse order.
                            // This will add the Options to the 'to' Select
                            // in the same order as they were in the 'from' Select.
                            for (i = selectedCount - 1; i >= 0; i--) {
                                addOption(theSelTo, selectedText[i], selectedValues[i]);
                            }

                         }

                </script>
         </div>
        
         <div class="wizard-step" id="room">
            <h3>Step 3: Vælg lokale</h3>
            <table>
            @foreach(var room in ((IList<Room>)ViewData["AllRooms"]))
                {
                
                    <tr>
                        <td>
                            @room.Name
                        </td>
                        <td>@room.Nr</td>
                        <td>
                        <input type="checkbox" id="@(room.Id)tsas" name="RoomId" value="@room.Id"/>
                        </td>
                    </tr>
                }
            </table>
         </div>

        <div class="wizard-step" id="mealorder">
            <h3>Step 4: Vælg forfriskninger</h3>
            <table>
            @foreach(var product in ((IList<Product>)ViewData["AllProducts"]))
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Description</td>
                        <td>@product.Size</td>
                        <td>@product.Price</td>

                        <td>
                        <input type="checkbox" id="@(product.Id)tsas" name="ProductIds" value="@product.Id"/>
                        </td>
                    </tr>
                }
                </table>

           <div class="test" id="123456789" >Next</div>
           @*  <div class="editor-label">
                @Html.LabelFor(model => model.MealOrder.MealType)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MealId)
                @Html.ValidationMessageFor(model => model.MealId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.MealDrinkId)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MealDrinkId)
                @Html.ValidationMessageFor(model => model.MealDrinkId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.MealOrderAmount)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MealOrderAmount)
                @Html.ValidationMessageFor(model => model.MealOrderAmount)
            </div>*@
       </div>

        <div class="wizard-step" id="confirm">
        
        </div>

      <p>
            <input type="button" id="back-step" name="back-step" value="< Back" />
            <input type="button" id="next-step" name="next-step" value="Next >" />            
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#next-step").click(function() {
            
            if ($("div#time").is(':visible')) {
                $("div#nav_date").removeClass().addClass("navigationnode current first");
            }
            else 
            {
                $("div#nav_date").removeClass().addClass("navigationnode unvisited");   
            }
            if ($("div#contacts").is(':visible')) {
                $("div#nav_contacts").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_contacts").removeClass().addClass("navigationnode unvisited");
            }
            if ($("div#room").is(':visible')) {
                $("div#nav_room").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_room").removeClass().addClass("navigationnode unvisited");
            }
            if ($("div#mealorder").is(':visible')) {
                $("div#nav_mealorder").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_mealorder").removeClass().addClass("navigationnode unvisited");
            }
            if ($("div#confirm").is(':visible')) {
                $("div#nav_confirm").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_confirm").removeClass().addClass("navigationnode unvisited");
            }
        });
        $("#back-step").click(function () {

            if ($("div#time").is(':visible')) {
                $("div#nav_date").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_date").removeClass().addClass("navigationnode unvisited");
            }
            if ($("div#contacts").is(':visible')) {
                $("div#nav_contacts").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_contacts").removeClass().addClass("navigationnode unvisited");
            }
            if ($("div#room").is(':visible')) {
                $("div#nav_room").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_room").removeClass().addClass("navigationnode unvisited");
            }
            if ($("div#mealorder").is(':visible')) {
                $("div#nav_mealorder").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_mealorder").removeClass().addClass("navigationnode unvisited");
            }
            if ($("div#confirm").is(':visible')) {
                $("div#nav_confirm").removeClass().addClass("navigationnode current first");
            }
            else {
                $("div#nav_confirm").removeClass().addClass("navigationnode unvisited");
            }
        });
    });
</script>